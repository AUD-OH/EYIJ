from flask import Flask, render_template, request, redirect, url_for
from flask_sqlalchemy import SQLAlchemy
import os
from flask_migrate import Migrate
app = Flask(__name__)
# basedir -> db 파일 기본 경로 import os 씀
basedir = os.path.abspath(os.path.dirname(__file__))
# db 경로
app.config['SQLALCHEMY_DATABASE_URI'] = \
    'sqlite:///' + os.path.join(basedir, 'ey_db.db')
db = SQLAlchemy(app)
# migrate 로 유니크 값 바꾼걸 적용 해 보려 했는데 실패
# migrate = Migrate(app, db)

# 댓글 db 테이블


class Com_t(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    u_coment = db.Column(db.String(200), unique=False, nullable=False)


with app.app_context():
    db.create_all()


# 댓글 생성 클래스
# 괄호 안에있는 주소가 나오면 나를 불러줘 그 후 밑에 있는 함수를 실행 시켜줘
@app.route('/coment_create')
def coment_create():
    # ey_post_con 에있는 데이터 받기
    u_coment_recive = request.args.get("comment")
    # 이거는 저장할 데이터를 변수에 저장하기
    com_t = Com_t(u_coment=u_coment_recive)
    # 변수에 저장한 데이터를 db에 추가
    db.session.add(com_t)
    # 데이터 베이스를 저장해줘
    db.session.commit()
    # 보여줄 화면의 주소값을 리턴해줌
    return redirect(url_for('ey_post_con'))
# 댓글 삭제 클래스
@app.route('/coment_edit/<int:com_t_id>', methods=['POST'])
def coment_edit(com_t_id):
    act = request.form.get('com_b')
    # print(act, com_t_id)
    com_del = Com_t.query.get(com_t_id)
    if com_del:
        db.session.delete(com_del)
        db.session.commit()
    return redirect(url_for('ey_post_con'))

# 댓글 업데이트
@app.route('/coment_update')
def coment_update():
    commenId = request.args.get('commentId')
    content = request.args.get('content')
    # print(commenId, content)
    comment = Com_t.query.get(commenId)
    if commenId:
        comment.u_coment = content
        db.session.commit()
    return redirect(url_for('ey_post_con'))


@app.route('/')
def home():
    print(request.args.get("comment"))
    return render_template('eyij.html')


@app.route('/ey_post')
def ey_post():
    return render_template('ey_post.html')


@app.route('/ey_team')
def ey_team():
    return render_template('ey_team.html')


@app.route('/ey_post_con')
def ey_post_con():
    post_con_list = Com_t.query.all()
    return render_template('ey_post_con.html', data=post_con_list)


if __name__ == '__main__':
    app.run(debug=True)
